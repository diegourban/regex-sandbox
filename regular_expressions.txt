Regex, ou expressões regulares, é uma linguagem para encontrar padrões de texto.
Sendo uma linguagem independente, existem interpretadores para a maioria das plataformas de desenvolvimento, como JavaScript, C#, Python ou Ruby.
Uma classe de caracteres predefinida é \d, que significa qualquer dígito.
Existem vários meta-char, como . ou *.
Existem quantifiers que definem quantas vezes um caractere deve aparecer:
{1} é um quantifier que significa uma vez.
* é um quantifier que significa zero, uma ou mais vezes
. é um meta-char que significa qualquer char.
Com \ podemos escapar meta-chars, por exemplo \..

--------------------------------------------------
CPF: \d\d\d\.\d\d\d\.\d\d-\d\d
CPF using quantifiers: \d{3}\.\d{3}\.\d{3}-\d{2}
CPF optional separators: \d{3}\.?\d{3}\.?\d{3}-?\d{2}
CPF with character class: \d{3}\.?\d{3}\.?\d{3}[-.]?\d{2}

CNPJ: \d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2}
IP: \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}
CEP: \d{5}-\d{3}
Telefone: \(\d{2}\) \d{4}-\d{4}
Hora: \d{2}h\d{2}min\d{2}s
Placa: [A-Z]{3}-\d{4}

15 de Outubro de 2016
Data: [1-3]?\d\s+de\s+[A-Z][a-zç]{3,8}\s+de\s+[12]\d{3}

Classes:
\s significa whitespace e é um atalho para [ \t\r\n\f].
\w significa word char e é uma atalho para [A-Za-z0-9_].

Quantifiers:
? - zero ou uma vez;
* - zero ou mais vezes;
+ - uma ou mais vezes;
{n} - exatamente n vezes;
{n,} - no mínimo n vezes;
{n,m} - no mínimo n+1 vezes, no máximo m vezes;